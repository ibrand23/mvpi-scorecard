@import "tailwindcss";

:root {
  --background: #090909;
  --foreground: #ffffff;
  --custom-blue: #1156ff;
  --custom-blue-50: #f0f4ff;
  --custom-blue-100: #e0e9ff;
  --custom-blue-200: #c7d7ff;
  --custom-blue-500: #1156ff;
  --custom-blue-600: #0f4ae6;
  --custom-blue-700: #0d3fcc;
  --custom-blue-800: #0b35b3;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: 'Overpass', Arial, Helvetica, sans-serif;
  --font-mono: 'Overpass', 'Courier New', monospace;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #090909;
    --foreground: #ffffff;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: 'Overpass', Arial, Helvetica, sans-serif;
}

/* Ensure Overpass is used throughout the app */
* {
  font-family: 'Overpass', Arial, Helvetica, sans-serif;
}

/* Override font-mono to use Overpass as well */
.font-mono {
  font-family: 'Overpass', 'Courier New', monospace !important;
}

/* Custom blue color overrides */
.bg-blue-50 { background-color: var(--custom-blue-50) !important; }
.bg-blue-100 { background-color: var(--custom-blue-100) !important; }
.bg-blue-200 { background-color: var(--custom-blue-200) !important; }
.bg-blue-500 { background-color: var(--custom-blue-500) !important; }
.bg-blue-600 { background-color: var(--custom-blue-600) !important; }
.bg-blue-700 { background-color: var(--custom-blue-700) !important; }
.bg-blue-800 { background-color: var(--custom-blue-800) !important; }

.text-blue-600 { color: var(--custom-blue-600) !important; }
.text-blue-800 { color: var(--custom-blue-800) !important; }

.border-blue-200 { border-color: var(--custom-blue-200) !important; }
.border-blue-500 { border-color: var(--custom-blue-500) !important; }

.focus\:ring-blue-500:focus { --tw-ring-color: var(--custom-blue-500) !important; }

.hover\:bg-blue-700:hover { background-color: var(--custom-blue-700) !important; }

.from-blue-50 { --tw-gradient-from: var(--custom-blue-50) !important; }

/* Radial gradient border styles with rounded corners */
.gradient-border {
  position: relative;
  border-radius: 0.75rem; /* rounded-xl */
}

.gradient-border::before {
  content: '';
  position: absolute;
  inset: 0;
  padding: 0.5px;
  background: radial-gradient(circle at center, #6D6D6D, #8E8E8E);
  border-radius: inherit;
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: xor;
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  pointer-events: none;
}

.gradient-border-2 {
  position: relative;
  border-radius: 0.75rem; /* rounded-xl */
}

.gradient-border-2::before {
  content: '';
  position: absolute;
  inset: 0;
  padding: 1px;
  background: radial-gradient(circle at center, #6D6D6D, #8E8E8E);
  border-radius: inherit;
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: xor;
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  pointer-events: none;
}

.gradient-border-b {
  position: relative;
  border-radius: 0.75rem; /* rounded-xl */
}

.gradient-border-b::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 0.5px;
  background: radial-gradient(ellipse at center, #6D6D6D, #8E8E8E);
  border-radius: 0 0 0.75rem 0.75rem;
  pointer-events: none;
}

.gradient-border-b-2 {
  position: relative;
  border-radius: 0.75rem; /* rounded-xl */
}

.gradient-border-b-2::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: radial-gradient(ellipse at center, #6D6D6D, #8E8E8E);
  border-radius: 0 0 0.75rem 0.75rem;
  pointer-events: none;
}

/* Mobile-specific styles - only apply when actually on mobile devices */
@media (max-width: 768px) and (hover: none) and (pointer: coarse) {
  /* Prevent horizontal scrolling and movement */
  html, body {
    overflow-x: hidden;
    position: fixed;
    width: 100%;
    height: 100%;
  }
  
  /* Ensure content doesn't exceed viewport width */
  * {
    max-width: 100vw;
    box-sizing: border-box;
  }
  
  /* Prevent horizontal drag/swipe gestures */
  body {
    touch-action: pan-y;
    -webkit-overflow-scrolling: touch;
  }
  
  /* Ensure all containers respect viewport bounds */
  .min-h-screen {
    min-height: 100vh;
    min-height: 100dvh; /* Dynamic viewport height for mobile */
  }
  
  /* Prevent content from causing horizontal overflow */
  .max-w-4xl {
    max-width: calc(100vw - 2rem);
  }
  
  .max-w-2xl {
    max-width: calc(100vw - 2rem);
  }
  
  .max-w-md {
    max-width: calc(100vw - 2rem);
  }
}

/* Mobile stabilization class - only apply when mobile detection is active */
.mobile-stabilized {
  overflow-x: hidden;
  position: relative;
  width: 100%;
}

.mobile-stabilized * {
  max-width: 100%;
  overflow-x: hidden;
}

/* Desktop-specific overrides to ensure proper spacing */
@media (min-width: 769px) {
  .mobile-stabilized {
    overflow-x: visible;
    position: static;
    width: auto;
  }
  
  .mobile-stabilized * {
    max-width: none;
    overflow-x: visible;
  }
}

/* Custom input styling for all text inputs */
input[type="text"],
input[type="email"],
input[type="password"],
input[type="number"],
textarea,
select:not(.inspection-select) {
  background-color: #373737 !important;
  border-color: #4F4F4F !important;
  color: white !important;
}

/* Inspection select elements - allow inline styles to control border colors */
.inspection-select {
  background-color: #373737 !important;
  color: white !important;
  /* Border color will be controlled by inline styles */
}

/* Force border color to be controlled by inline styles for inspection selects */

/* Specific border colors for inspection select based on data attribute */
select.inspection-select[data-condition="Pass"] {
  border: 1px solid #10B981 !important; /* green-500 */
}

select.inspection-select[data-condition="Attention Required"] {
  border: 1px solid #F59E0B !important; /* yellow-500 */
}

select.inspection-select[data-condition="Failed"] {
  border: 1px solid #EF4444 !important; /* red-500 */
}

select.inspection-select[data-condition="Not Inspected"] {
  border: 1px solid #FFFFFF !important; /* white */
}

/* Conditional border colors are now handled via inline styles in components */

input[type="text"]::placeholder,
input[type="email"]::placeholder,
input[type="password"]::placeholder,
input[type="number"]::placeholder,
textarea::placeholder {
  color: #6D6D6D !important;
}

/* Focus states for inputs */
input[type="text"]:focus,
input[type="email"]:focus,
input[type="password"]:focus,
input[type="number"]:focus,
textarea:focus,
select:focus:not(.inspection-select) {
  background-color: #373737 !important;
  border-color: #4F4F4F !important;
  outline: 2px solid #4F4F4F !important;
  outline-offset: 2px !important;
}

/* Select dropdown styling */
select {
  background-color: #373737 !important;
  color: white !important;
}

select option {
  background-color: #373737 !important;
  color: white !important;
}

/* Override any existing input classes that might conflict */
.w-full.px-3.py-2.border.rounded-lg:not(.inspection-select),
.w-full.px-3.py-2.border.rounded-md:not(.inspection-select) {
  background-color: #373737 !important;
  border-color: #4F4F4F !important;
  color: white !important;
}

.w-full.px-3.py-2.border.rounded-lg::placeholder,
.w-full.px-3.py-2.border.rounded-md::placeholder {
  color: #6D6D6D !important;
}

/* Specific overrides for inspection form conditional styling */
input[type="text"].border-gray-600,
input[type="email"].border-gray-600,
input[type="password"].border-gray-600,
input[type="number"].border-gray-600,
textarea.border-gray-600,
select.border-gray-600 {
  background-color: #373737 !important;
  border-color: #4F4F4F !important;
  color: white !important;
}

/* Conditional border colors are now handled via inline styles in components */

/* Override any bg-gray-800/50 classes */
.bg-gray-800\/50 {
  background-color: #373737 !important;
}

/* Ensure all text inputs have consistent styling regardless of existing classes */
input:not([type="checkbox"]):not([type="radio"]):not([type="submit"]):not([type="button"]),
textarea,
select:not(.inspection-select) {
  background-color: #373737 !important;
  border-color: #4F4F4F !important;
  color: white !important;
}

input:not([type="checkbox"]):not([type="radio"]):not([type="submit"]):not([type="button"])::placeholder,
textarea::placeholder {
  color: #6D6D6D !important;
}
